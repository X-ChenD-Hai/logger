from __future__ import annotations
import typing
__all__ = ['Connection', 'IpcServer', 'Message', 'Server', 'ServerRole']
class Connection:
    @staticmethod
    def _pybind11_conduit_v1_(*args, **kwargs):
        ...
    def __init__(self, arg0: str) -> None:
        ...
    def roles(self) -> list[ServerRole]:
        ...
    def root(self) -> ServerRole:
        ...
class IpcServer(Server):
    @staticmethod
    def _pybind11_conduit_v1_(*args, **kwargs):
        ...
    def __init__(self, arg0: str) -> None:
        ...
class Message:
    @staticmethod
    def _pybind11_conduit_v1_(*args, **kwargs):
        ...
    def __init__(self) -> None:
        ...
    @property
    def msg(self) -> str:
        ...
class Server:
    @staticmethod
    def _pybind11_conduit_v1_(*args, **kwargs):
        ...
    def __init__(self, arg0: str) -> None:
        ...
    def connection(self, arg0: str) -> Connection:
        ...
    def connections(self) -> list[Connection]:
        ...
    def listening(self) -> None:
        ...
    def send(self, arg0: ..., arg1: Connection, arg2: int) -> bool:
        ...
class ServerRole:
    @staticmethod
    def _pybind11_conduit_v1_(*args, **kwargs):
        ...
    def __init__(self) -> None:
        ...
    @property
    def children(self) -> dict[str, ServerRole]:
        ...
    @property
    def id(self) -> int:
        ...
    @property
    def labels(self) -> list[int]:
        ...
    @property
    def messages(self) -> list[Message]:
        ...
    @property
    def name(self) -> str:
        ...
    @property
    def parent(self) -> ServerRole:
        ...
    @property
    def timestamp(self) -> int:
        ...
